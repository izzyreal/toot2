/* Generated by TooT */

package uk.org.toot.swingui.midiui.sequenceui;

import java.awt.event.ActionEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;
import javax.swing.JButton;
import uk.org.toot.midi.sequence.edit.SequenceSelection;
import uk.org.toot.midi.sequence.SequenceHistory;
import uk.org.toot.midi.sequence.edit.Cut;
import uk.org.toot.midi.sequence.edit.Paste;
import uk.org.toot.swingui.miscui.TootBar;
import uk.org.toot.misc.UndoableCommand;

/**
 * History Toolbar
 */
class SelectionToolBar extends TootBar
{
    private final static String SELECTION = "Selection";
    private final static String CUT = "Cut";
    private final static String COPY = "Copy";
    private final static String PASTE = "Paste";
    private Editor editor;
    private SequenceSelection clip;
	private JButton cutB;
	private JButton copyB;
	private JButton pasteB;

    public SelectionToolBar(Editor editor) {
        super(SELECTION+" Tools");
        this.editor = editor;
        setOrientation(TootBar.VERTICAL); // !!!
        cutB = makeButton("general/Cut16", CUT, CUT+" "+SELECTION, CUT+" "+SELECTION, false);
        add(cutB);
        copyB = makeButton("general/Copy16", COPY, COPY+" "+SELECTION, COPY+" "+SELECTION, false);
        add(copyB);
        pasteB = makeButton("general/Paste16", PASTE, PASTE+" "+SELECTION, PASTE+" "+SELECTION, false);
        add(pasteB);

        editor.getSelection().getChangeSupport().addChangeListener(
            new ChangeListener() {
            	public void stateChanged(ChangeEvent chev) {
                	update();
            	}
        	});
    }

    public SequenceSelection getSelection() {
        return editor.getSelection();
    }

    public SequenceHistory getHistory() {
        return editor.getHistory();
    }

    protected void edit(UndoableCommand edit) {
        getHistory().nowdo(edit);
    }

    protected void update() {
        cutB.setEnabled(!getSelection().isEmpty());
        copyB.setEnabled(!getSelection().isEmpty());
        pasteB.setEnabled(clip != null);
    }

    public void actionPerformed(ActionEvent e) {
   	    String cmd = e.getActionCommand();
		try {
	        if ( CUT.equals(cmd) ) {
    	        clip = (SequenceSelection)getSelection().clone();
        	    edit(new Cut(clip));
                // !!! needs to be done per execute !!! !!!
            	getSelection().clear(); // because it has been cut
	        } else if ( COPY.equals(cmd) ) {
    	    	clip = (SequenceSelection)getSelection().clone();
        	} else if ( PASTE.equals(cmd) ) {
            	edit(new Paste(clip));
	        }
        } catch (CloneNotSupportedException cnse) {
        }
        update();
    }
}


