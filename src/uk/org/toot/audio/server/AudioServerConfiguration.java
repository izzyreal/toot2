/* Generated by Together */

package uk.org.toot.audio.server;

import java.util.Properties;
import java.util.Observable;
import java.util.Enumeration;

/**
 * An AudioServerConfiguration seperates the configuration concerns from
 * an AudioServer.
 * A suitable implementation for a particular AudioServer implementation is 
 * instantiated as a provided service by:
 *     AudioServerServices.createServerConfiguration(AudioServer server);
 * @author Steve Taylor
 */
public abstract class AudioServerConfiguration extends Observable
{
	/**
	 * Return the Properties representing our server's configuration.
	 * @return Properties
	 */
    public abstract Properties getProperties();
    public abstract void applyProperties(Properties properties);
    
    /**
     * Merge our properties into the specifed properties
     * @param properties the properties to be merged into
     */
    public void mergeInto(Properties properties) {
		Properties scp = getProperties();
		for ( Enumeration e = scp.propertyNames(); e.hasMoreElements(); ) {
			String key = (String)e.nextElement();
			properties.setProperty(key, scp.getProperty(key));
		}
    	
    }
    
    /*
     * When an Observer is notified it should call mergeInto() or getProperties() 
     */
    public void update() {
    	setChanged();
    	notifyObservers();
    }
}
