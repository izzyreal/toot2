/* Generated by TooT */

/*
To correspond with MIDI:
*     *     *  *     *     *     *  white
C  Db D  Eb E  F  F# G  Ab A  Bb B
0  1  2  3  4  5  6  7  8  9  10 11 pitch class
   *     *        *     *     *		black

copes with enharmonic equivalents

A  B  C  D  E  F  G
9  11 0  2  4  5  7
*/

package uk.org.toot.pitch;

public class PitchClass
{
	// doesn't cope with enharmonic spelling !!! !!!
    private static String[] names = {
        "C", "C#", "D", "Eb", "E", "F", "F#", "G", "G#", "A", "Bb", "B" } ;

    protected PitchClass() {
        // to prevent instantiation
    }

    public static String name(int semi) {
        return names[value(semi)] ;
    }

    public static int value(int semi) {
    	// !!! should cope with -ve
    	return semi % 12;
    }
    
    public static int value(String note) {
        char qual = ' ', letter = note.charAt(0) ;
        int base = 0, offset = 0 ;

        // should cope with double sharp/flat !!!
        if ( note.length() > 1 )
        	qual = note.charAt(1) ;  // specified quality if available

        if ( qual == '#' ) offset++ ;
        else if ( qual == 'b' ) offset-- ;

        switch ( letter ) {
        case 'C': base = 0 ;  break ;
        case 'D': base = 2 ;  break ;
        case 'E': base = 4 ;  break ;
        case 'F': base = 5 ;  break ;
        case 'G': base = 7 ;  break ;
        case 'A': base = 9 ;  break ;
        case 'B': base = 11 ; break ;
        }

        return value(base+offset);
    }

    public static boolean isWhite(int val) {
        return !isBlack(val) ;
    }

    public static boolean isBlack(int val) {
        int pc = value(val);
        return ( pc == 1 || pc == 3 || pc == 6 || pc == 8 || pc == 10 ) ;
    }
}
